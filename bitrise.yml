---
format_version: '5'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: react-native
trigger_map:
  - push_branch: master
    workflow: TestingAndroid
  - push_branch: master
    workflow: TestingIos
  - tag: "*"
    workflow: Release
workflows:
  Release:
    steps:
      - activate-ssh-key:
          title: Activate SSH Key
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone:
          title: Clone Repository
      - script:
          title: Unlink Node
          inputs:
            - content: brew unlink node@8
      - brew-install:
          title: Install Yarn
          inputs:
            - packages: yarn
      - script:
          title: Add NPM token
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - yarn:
          title: Install Dependencies
          inputs:
            - command: install
      - cocoapods-install:
          inputs:
            - source_root_path: "$BITRISE_SOURCE_DIR/ios"
      - script:
          title: React Native Link
          inputs:
            - content: yarn react-native link
      - install-missing-android-tools:
          title: Install Android Tools
          inputs:
            - gradlew_path: "$PROJECT_LOCATION/gradlew"
      - android-build:
          title: Build Android App
          inputs:
            - project_location: "$PROJECT_LOCATION"
            - module: "$MODULE"
            - variant: "$BUILD_VARIANT"
      - sign-apk:
          title: Sign APK
      - ios-auto-provision:
          title: Prepare IPA Signing
          inputs:
            - team_id: "$TEAM_ID"
            - configuration: "$CONFIGURATION"
            - distribution_type: "$DISTRIBUTION_TYPE"
            - generate_profiles: 'yes'
      - xcode-archive:
          title: Build iOS App
          inputs:
            - project_path: "$BITRISE_PROJECT_PATH"
            - scheme: "$BITRISE_SCHEME"
            - export_method: "$DISTRIBUTION_TYPE"
            - configuration: "$CONFIGURATION"
      - deploy-to-bitrise-io:
          title: Create Artifacts
      - google-play-deploy:
          inputs:
            - package_name: "$PACKAGE_NAME"
            - track: production
            - service_account_json_key_path: "$BITRISEIO_GOOGLE_SERVICE_ACCOUNT_URL"
      - slack:
          inputs:
            - channel: "$SLACK_CHANNEL"
            - channel_on_error: "$SLACK_CHANNEL"
            - buttons: |
                View App|${BITRISE_APP_URL}
                View Build|${BITRISE_BUILD_URL}
                Google Play|https://play.google.com/apps/publish
            - pretext: Your app is ready to be published!
            - webhook_url: "$SLACK_WEB_HOOK"
    envs:
      - opts:
          is_expand: false
        DISTRIBUTION_TYPE: app-store
  TestingAndroid:
    steps:
      - activate-ssh-key:
          title: Activate SSH Key
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone:
          title: Clone Repository
      - script:
          title: Unlink Node
          inputs:
            - content: brew unlink node@8
      - nvm@1.2.2:
          inputs:
            - node_version: 8.11.3
      - brew-install:
          title: Install Yarn
          inputs:
            - packages: yarn
      - script:
          title: Add NPM token
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - yarn:
          title: Install Dependencies
          inputs:
            - args: ''
            - command: install
      - yarn:
          title: Run Tests
          inputs:
            - command: test
      - script:
          title: React Native Link
          inputs:
            - content: yarn react-native link
      - install-missing-android-tools:
          title: Install Android Tools
          inputs:
            - gradlew_path: "$PROJECT_LOCATION/gradlew"
      - change-android-versioncode-and-versionname:
          inputs:
            - build_gradle_path: "$BITRISE_SOURCE_DIR/android/app/build.gradle"
      - android-build:
          title: Build Android App
          inputs:
            - project_location: "$PROJECT_LOCATION"
            - module: "$MODULE"
            - variant: "$BUILD_VARIANT"
      - sign-apk:
          title: Sign APK
      - script:
          title: Rename APK
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                if [ -z "$BITRISE_GIT_MESSAGE" ]
                # Make sure there are no forward slashes in file names
                ESCAPED_MESSAGE=${BITRISE_GIT_MESSAGE/\//-}
                then
                    apk_path="${BITRISE_DEPLOY_DIR}/"$BITRISEIO_GIT_REPOSITORY_SLUG".apk"
                else
                    apk_path="${BITRISE_DEPLOY_DIR}/"$BITRISEIO_GIT_REPOSITORY_SLUG" ("$ESCAPED_MESSAGE").apk"
                fi
                mv "$BITRISE_APK_PATH" "$apk_path"
                envman add --key BITRISE_APK_PATH --value "$apk_path"
      - script:
          title: Upload APK to BrowserStack
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                curl -u "$BROWSERSTACK_USERNAME:$BROWSERSTACK_ACCESS_KEY" -X POST https://api-cloud.browserstack.com/app-live/upload -F "file=@$BITRISE_APK_PATH"
      - slack:
          inputs:
            - channel: "$SLACK_CHANNEL"
            - channel_on_error: "$SLACK_CHANNEL"
            - buttons: |
                View App|${BITRISE_APP_URL}
                View Build|${BITRISE_BUILD_URL}
                BrowserStack|https://app-live.browserstack.com
            - pretext: Your Android app is ready to be tested!
            - webhook_url: "$SLACK_WEB_HOOK"
    envs:
      - opts:
          is_expand: false
        DISTRIBUTION_TYPE: development
  TestingIos:
    steps:
      - activate-ssh-key:
          title: Activate SSH Key
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone:
          title: Clone Repository
      - nvm@1.2.2:
          inputs:
            - node_version: 8.11.3
      - brew-install:
          title: Install Yarn
          inputs:
            - packages: yarn
      - script:
          title: Add NPM token
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - yarn:
          title: Install Dependencies
          inputs:
            - args: "--pure-lockfile"
            - command: install
      - yarn:
          title: Run Tests
          inputs:
            - command: test
      - script:
          title: React Native Link
          inputs:
            - content: yarn react-native link
      - cocoapods-install:
          inputs:
            - source_root_path: "$BITRISE_SOURCE_DIR/ios"
      - ios-auto-provision:
          title: Prepare IPA Signing
          inputs:
            - team_id: "$TEAM_ID"
            - configuration: ''
            - distribution_type: "$DISTRIBUTION_TYPE"
            - generate_profiles: 'yes'
      - xcode-archive:
          title: Build iOS App
          inputs:
            - project_path: "$BITRISE_PROJECT_PATH"
            - scheme: "$BITRISE_SCHEME"
            - export_method: "$DISTRIBUTION_TYPE"
            - configuration: Release
      - deploy-to-bitrise-io:
          title: Create Artifacts
      - script:
          title: Rename IPA
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                if [ -z "$BITRISE_GIT_MESSAGE" ]
                # Make sure there are no forward slashes in file names
                ESCAPED_MESSAGE=${BITRISE_GIT_MESSAGE/\//-}
                then
                    ipa_path="${BITRISE_DEPLOY_DIR}/"$BITRISEIO_GIT_REPOSITORY_SLUG".ipa"
                else
                    ipa_path="${BITRISE_DEPLOY_DIR}/"$BITRISEIO_GIT_REPOSITORY_SLUG" ("$ESCAPED_MESSAGE").ipa"
                fi
                mv "$BITRISE_IPA_PATH" "$ipa_path"
                envman add --key BITRISE_IPA_PATH --value "$ipa_path"
      - script:
          title: Upload IPA to BrowserStack
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                curl -u "$BROWSERSTACK_USERNAME:$BROWSERSTACK_ACCESS_KEY" -X POST https://api-cloud.browserstack.com/app-live/upload -F "file=@$BITRISE_IPA_PATH"
      - slack:
          inputs:
            - channel: "$SLACK_CHANNEL"
            - channel_on_error: "$SLACK_CHANNEL"
            - buttons: |
                View App|${BITRISE_APP_URL}
                View Build|${BITRISE_BUILD_URL}
                BrowserStack|https://app-live.browserstack.com
            - pretext: Your IOS app is ready to be tested!
            - webhook_url: "$SLACK_WEB_HOOK"
    envs:
      - opts:
          is_expand: false
        DISTRIBUTION_TYPE: development
app:
  envs:
    - opts:
        is_expand: false
      PROJECT_LOCATION: android
    - opts:
        is_expand: false
      MODULE: app
    - opts:
        is_expand: false
      CONFIGURATION: Release
